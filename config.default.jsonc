{
  // Specifically event logging
  "logging": {
    // restrict this command to people with the `administrator` perm
    "permissions": {
      "requiredPerms": ["administrator"]
    },
    /**
     * Different levels of verbose logging.
     *
     * 0: No logging, no events will be logged
     *
     * 1: Very minimalist logging, including core and module starting, as well as module failure.
     *
     * 2: Slightly more verbose logging, may log some important info events
     *
     * 3: Will log commands used and all info passed through eventLogger
     *
     * 4:
     */
    "stdout": {
      "verboseLevel": 3
    },
    // It is an option to have the bot DM certain users for events, it's suggested to leave this disabled or on a very low level.
    "directMessageLogging": {
      "userIds": [""],
      "verboseLevel": 1
    },
    "loggingChannel": {
      "loggingChannelId": "",
      "verboseLevel": 3
    }
  },

  // The key for each module should match the one specified in the root module initialization
  // if the `enabled` key is missing, the extension will be disabled by default, and a warning issued
  // permissions are explained in the production environment doc
  "modules": {
    "logging": {
      "enabled": true,
      // each channel ID paired with a respecting logging channel, if it's not specified here
      // messages from that channel will silently not be logged,
      "loggingCategory": "",
      // this can be filled automatically with `logging populate` if `loggingCategory` is set
      // communication channel on the left, logging channel on the right
      "channelMap": {
    },
      // this array contains a list of channels that will not be logged. also populated by `logging populate`
      "channelBlacklist": []
    },
    "factoid": {
      "enabled": true,
      // a list of characters that can be used as a prefix to trigger a factoid
      "prefixes": ["?"],
      "pasteApi": ""
    },
    "note": {
      "enabled": true
    },
    "whois": {
      "enabled": true
    },
    "conch": {
      "enabled": true
    },
    "apply": {
      "enabled": true,
      // Channel to send the applications to
      "channel": "",
      // All questions have a strict 45 character limit
      "questions": []
    },
    "application": {
      "enabled": true,
      "applyRoleOnApprove": false,
      "roleIdOnApprove": ""
    },
    "google": {
      "enabled": true,
      "ApiKey": "",
      "CseId": ""
    },
    // API key is shared with google
    "youtube": {
      "enabled": true
    },
    "bot": {
      "enabled": true
    },
    "autopaste": {
      "enabled": true,
      // Make sure the ids are all strings, not numbers
      "immuneRoleIds": [],
      "maxLength": 100,
      "pasteFooterContent": "",
      "pasteApi": ""
    },
    "filter": {
      "enabled": true,
      "exemptRoles": []
    },
    "warn": {
      "enabled": true,
      "maxWarns": 3
    },
    "warns": {
      "enabled": true
    },
    "unwarn": {
      "enabled": true

  },
  "duck": {
    "enabled": true,
    "channels": [],
    // Times are specified in seconds
    "minimumSpawn": 30,
    "maximumSpawn": 180,
    "runAwayTime": 20,
    // Timeout on miss
    "cooldown": 5,
    // Failure percentages
    "failRates": {      
      // Bef and bang
      "interaction": 50,
      "kill": 50,
      "donate": 50
    }
  }
  }
}
